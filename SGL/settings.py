"""
Django settings for SGL project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!+qk-%hvw_7ez$fa)+9wz#wvi_g1zf3wv$^0ed0*p69c@l3%b3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'dev.agromarkers.com.br',
    'localhost',
    '127.0.0.1',
]


# Application definition

INSTALLED_APPS = [
    'app',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'import_export',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django_csp.middleware.CSPMiddleware',  # Adicione esta linha se não existir
]

CSRF_COOKIE_SECURE = False  # Temporariamente para testes
ROOT_URLCONF = 'SGL.urls'

# # CSP Settings
# CSP_DEFAULT_SRC = ("'self'",)
# CSP_SCRIPT_SRC = ("'self'", 'https://trusted-cdn.com', 'resource:')  # Add 'resource:' for devtools, remove in production
# CSP_STYLE_SRC = ("'self'", 'https://fonts.googleapis.com')
# CSP_IMG_SRC = ("'self'", 'data:')
# CSP_FONT_SRC = ("'self'", 'https://fonts.gstatic.com')
# CSP_OBJECT_SRC = ("'none'",)
# CSP_MEDIA_SRC = ("'self'",)
# CSP_FRAME_SRC = ("'none'",)
# CSP_CONNECT_SRC = ("'self'",)
# CSP_BASE_URI = ("'self'",)
# CSP_FRAME_ANCESTORS = ("'none'",)
# CSP_SCRIPT_SRC = ("'self'", 'https://trusted-cdn.com', 'resource:', "'unsafe-inline'", "'unsafe-eval'")
# CSP_SCRIPT_SRC_ATTR = ("'self'", "'unsafe-inline'")
# CSP_STYLE_SRC = ("'self'", 'https://fonts.googleapis.com', "'unsafe-inline'")


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [BASE_DIR / 'templates'],  # Adicione esta linha se não existir
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SGL.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'db_dev',
        'USER': 'django_user',
        'PASSWORD': 'Jsoj@3105',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True

####################################################################################

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
X_FRAME_OPTIONS = 'SAMEORIGIN'  # Necessário para o admin_interface

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': 'sua-chave-secreta',
    'AUTH_HEADER_TYPES': ('Bearer',),
}


AUTH_USER_MODEL = 'app.User'  # Substitua 'app' pelo nome do seu app

# Configurações de autenticação
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# Configurações de login
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

# Configuração de logging

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'app': {  # substitua 'app' pelo nome do seu app
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

DATE_FORMAT=["%d/%m/%Y"]
DATE_INPUT_FORMATS=["%d/%m/%Y"]


# Adicione estas configurações no settings.py

# Configurações para upload de arquivos
IMPORT_EXPORT_TMP_STORAGE_CLASS = 'import_export.tmp_storages.CacheStorage'
IMPORT_EXPORT_CHUNK_SIZE = 1000  # Número de registros processados por vez

# Configurações de arquivo
FILE_UPLOAD_MAX_MEMORY_SIZE = 26214400  # 25MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 26214400  # 25MB
IMPORT_EXPORT_USE_TRANSACTIONS = True

# Diretório para arquivos temporários
FILE_UPLOAD_TEMP_DIR = '/tmp'

# Configurar cache para armazenamento temporário
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/django_cache',
    }
}


# Configurações para import/export
IMPORT_EXPORT_USE_TRANSACTIONS = True
IMPORT_EXPORT_SKIP_ADMIN_LOG = True
IMPORT_EXPORT_CHUNK_SIZE = 500


# Configuração para timeouts mais longos
DATA_UPLOAD_MAX_MEMORY_SIZE = 52428800  # 50MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 52428800  # 50MB

# Settings para otimizar import/export
IMPORT_EXPORT_CELERY_TASK_EXPIRES = 60  # 1 minuto



# Configurações de Email SMTP

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 25
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False
EMAIL_USE_SSL = False
SERVER_EMAIL = 'noreply@jsoj.site'
DEFAULT_FROM_EMAIL = 'Agromarkers Template <noreply@jsoj.site>'

# Adicione estas configurações ara email
EMAIL_TIMEOUT = 60  # tempo limite em segundos
EMAIL_SUBJECT_PREFIX = '[Agromarkers] '  # prefixo para assuntos de emails
EMAIL_DEBUG = True  # ativar logs detalhados de email

CONTROL_WELL_POSITIONS = ['A01', 'B01', 'C01', 'D01','E01','F01']

